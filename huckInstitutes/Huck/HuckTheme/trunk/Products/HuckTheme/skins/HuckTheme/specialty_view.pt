<metal:block define-macro="master">
  <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
        lang="en"
        metal:use-macro="here/main_template/macros/master"
        i18n:domain="FacultyStaffDirectory">


    <tal:comment tal:replace="nothing">
      Created by: Paul Rentschler
      Description: used to display specialties in either the gallery or tabular format
      Based on: specialty_view.pt (from FSD 3.1.1)
      Changes:
        - defined additional variables indicating where we are in the site
        - customized the page title (h1) based on the type of specialty
        - show subspecialties as a list if on a facility or institution specialty
          - all subspecialties have been hidden because they appear in the left side nav
      Notes:
        - not actually specified anywhere as a "view" on an object.
        - serves as a template to power classification and specialty views
    </tal:comment>


    <body>
      <metal:fill fill-slot="main">
        <div class="facultyStaffDirectory"
             tal:define="whereAreWe context/absolute_url;
                         inTechFacPeople python:('acilities' in whereAreWe) or ('nstitute' in whereAreWe);
                         inAdminPeople  python:'admin' in whereAreWe;
                         inCofunded python:'funded' in whereAreWe;
                         inResearchSpecialty python:not inTechFacPeople and not inAdminPeople;
                         inFacFolder context/aq_inner/id;
                         inTechFacFolder python:'acilities' in inFacFolder;">
                         
          <h1 class="documentFirstHeading"
              tal:condition="not:inCofunded">
            <tal:notInAdmin tal:condition="not:inAdminPeople">
              People who work in
              <span class="specialtyName" tal:content="context/Title">[specialty name]</span>
            </tal:notInAdmin>
            <tal:inAdmin tal:condition="inAdminPeople">
              Administrative staff
            </tal:inAdmin>
          </h1>
          <h1 class="documentFirstHeading"
              tal:condition="inCofunded">
            <span tal:replace="context/Title">[specialty name]</span>
          </h1>
      
          <p class="documentDescription"
             tal:condition="here/Description"
             tal:content="here/Description">
            Description
          </p>

          <div tal:content="structure here/getText">[rich text specialty body]</div>


          <tal:facilitiesonly tal:condition="inTechFacPeople">

<tal:comment tal:replace="nothing">
    Only display this if we're in the technology facilities or institutes and centers 
    specialty and the specialty contains subspecialties
</tal:comment>

            <div tal:condition="nocall:python:context.getFolderContents({'portal_type':'FSDSpecialty'})">
              <dl class="listFacilities">
                <tal:block tal:repeat="subspecialty python:context.getFolderContents({'portal_type':'FSDSpecialty', 'sort_on':'sortable_title'})">
                  <dt>
                    <a tal:attributes="href subspecialty/getURL"
                       tal:content="subspecialty/Title">
                      [subspecialty name]</a>
                  </dt>
                  <dd tal:content="subspecialty/Description">[subspecialty description]</dd>
                </tal:block>
              </dl>
            </div>
          </tal:facilitiesonly>

          <div class="listPeople" tal:condition="not:inTechFacFolder">

<tal:comment tal:replace="nothing">
    If we're in the main technology facilities or institutes and centers specialty folder,
    don't display anyone, otherwise, show people in the specialty
</tal:comment>

            <tal:block tal:condition="context/getPeople">
              <metal:block define-slot="listing_section">
                <metal:block define-macro="list_classifications"
                             tal:define="directory context/getDirectoryRoot;
                                         allClassifications python:[c.getObject() for c in directory.getClassifications()];
                                         classificationsInRequest request/classification|nothing;
                                         classifications python:classificationsInRequest and [directory[c] for c in isinstance(classificationsInRequest, basestring) and [classificationsInRequest] or classificationsInRequest] or allClassifications;
                                        ">
                  <tal:block tal:define="classificationBrains context/getClassifications"
                             tal:repeat="classification classifications">
                    <metal:block define-slot="single_classification" />
                  </tal:block>    
                </metal:block>
              </metal:block>
            </tal:block>
          </div>
        </div>
      </metal:fill>
    </body>
  </html>
</metal:block>